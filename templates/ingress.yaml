{{- $fullname := include "microverse.name" . -}}
{{- $name := .Values.name | default .Release.Name -}}
{{- $chartname := include "microverse.chartname" . -}}
{{- $tlssuffix := include "microverse.tlssuffix" . -}}
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: {{ $fullname }}
  labels:
    app: {{ $fullname }}
    chart: {{ $chartname }}
    release: {{ $name }}
    heritage: Tiller
  annotations:
    kubernetes.io/ingress.class: "nginx"
    kubernetes.io/tls-acme: "true"
spec:
  tls:
    - hosts:
        - app.{{ .Values.domain }}
      secretName: app-{{ $tlssuffix }}
  rules:
    - host: app.{{ .Values.domain }}
      http:
        paths:
          - path: /{{ $name }}
            backend:
              serviceName: {{ $fullname }}
              servicePort: 80
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: microverse-dashboard-{{ $name }}
  labels:
    app: {{ $fullname }}
    chart: {{ $chartname }}
    release: {{ $name }}
    heritage: Tiller
  annotations:
    kubernetes.io/ingress.class: "nginx"
    kubernetes.io/tls-acme: "true"
spec:
  tls:
    - hosts:
        - dashboard.{{ .Values.domain }}
      secretName: dashboard-{{ $tlssuffix }}
  rules:
    - host: dashboard.{{ .Values.domain }}
      http:
        paths:
          - path: /{{ $name }}
            backend:
              serviceName: microverse-dashboard-{{ $name }}
              servicePort: 80
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: microverse-ice-{{ $name }}
  labels:
    app: {{ $fullname }}
    chart: {{ $chartname }}
    release: {{ $name }}
    heritage: Tiller
  annotations:
    kubernetes.io/ingress.class: "nginx"
    kubernetes.io/tls-acme: "true"
    ingress.kubernetes.io/rewrite-target: "/"
    nginx.org/websocket-services: "microverse-ice-{{ $name }}"
spec:
  tls:
    - hosts:
        - ice.{{ .Values.domain }}
      secretName: ice-{{ $tlssuffix }}
  rules:
    - host: ice.{{ .Values.domain }}
      http:
        paths:
          - path: /{{ $name }}
            backend:
              serviceName: microverse-ice-{{ $name }}
              servicePort: 80
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: microverse-bootstrap-{{ $name }}
  labels:
    app: {{ $fullname }}
    chart: {{ $chartname }}
    release: {{ $name }}
    heritage: Tiller
  annotations:
    kubernetes.io/ingress.class: "nginx"
    kubernetes.io/tls-acme: "true"
    nginx.org/websocket-services: "microverse-bootstrap-{{ $name }}"
spec:
  tls:
    - hosts:
        - bootstrap.{{ .Values.domain }}
      secretName: bootstrap-{{ $tlssuffix }}
  rules:
    - host: bootstrap.{{ .Values.domain }}
      http:
        paths:
          - path: /{{ $name }}
            backend:
              serviceName: microverse-bootstrap-{{ $name }}
              servicePort: 80
